<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Meausre' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='physical_harm_and_dependence' inline='true' name='federated.0fcll541mfj8961eaihpk1ycliug' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='physical_harm_and_dependence' name='textscan.0821lbj1svvzdq16w1fjr0pqfxz3'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/ashwi/Desktop/Ashwin/physical_harm_and_dependence/physical_harm_and_dependence.csv' dataRefreshTime='' directory='C:/Users/ashwi/Desktop/Ashwin/physical_harm_and_dependence' filename='C:/Users/ashwi/AppData/Local/Temp/TableauTemp/0ctw45719pawd21euntgy15dgtpp/physical_harm_and_dependence.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0821lbj1svvzdq16w1fjr0pqfxz3' name='physical_harm_and_dependence.csv' table='[physical_harm_and_dependence#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Drug' ordinal='0' />
            <column datatype='real' name='Mean Physical harm + Mean Dependence' ordinal='1' />
            <column datatype='real' name='Mean Physical harm' ordinal='2' />
            <column datatype='real' name='Median Physical harm' ordinal='3' />
            <column datatype='real' name='Mean Physical harm(NA=0)' ordinal='4' />
            <column datatype='real' name='Acute harm' ordinal='5' />
            <column datatype='real' name='Chronic harm' ordinal='6' />
            <column datatype='real' name='Intravenous harm' ordinal='7' />
            <column datatype='real' name='Mean Dependence' ordinal='8' />
            <column datatype='real' name='Pleasure' ordinal='9' />
            <column datatype='real' name='Psychological' ordinal='10' />
            <column datatype='real' name='Physical' ordinal='11' />
            <column datatype='real' name='Mean Social harm' ordinal='12' />
            <column datatype='real' name='Intoxication' ordinal='13' />
            <column datatype='real' name='Social harm' ordinal='14' />
            <column datatype='real' name='Health-care costs' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drug</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drug]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Drug</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Physical harm + Mean Dependence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Physical harm + Mean Dependence]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Mean Physical harm + Mean Dependence</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Physical harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Physical harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Mean Physical harm</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Physical harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Physical harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Median Physical harm</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Physical harm(NA=0)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Physical harm(NA=0)]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Mean Physical harm(NA=0)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Acute harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Acute harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Acute harm</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chronic harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Chronic harm</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intravenous harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Intravenous harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Intravenous harm</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Dependence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Dependence]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Mean Dependence</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pleasure</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pleasure]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Pleasure</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Psychological</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Psychological]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Psychological</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Physical]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Physical</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Social harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Social harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Mean Social harm</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Intoxication</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Intoxication]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Intoxication</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social harm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social harm]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Social harm</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health-care costs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health-care costs]</local-name>
            <parent-name>[physical_harm_and_dependence.csv]</parent-name>
            <remote-alias>Health-care costs</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Acute harm]' role='measure' type='quantitative' />
      <column datatype='real' name='[Chronic harm]' role='measure' type='quantitative' />
      <column datatype='string' name='[Drug]' role='dimension' type='nominal' />
      <column datatype='real' name='[Health-care costs]' role='measure' type='quantitative' />
      <column datatype='real' name='[Intoxication]' role='measure' type='quantitative' />
      <column datatype='real' name='[Intravenous harm]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Dependence]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Physical harm + Mean Dependence]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Physical harm(NA=0)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Physical harm]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Social harm]' role='measure' type='quantitative' />
      <column datatype='real' name='[Median Physical harm]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Physical]' role='measure' type='quantitative' />
      <column datatype='real' name='[Pleasure]' role='measure' type='quantitative' />
      <column datatype='real' name='[Psychological]' role='measure' type='quantitative' />
      <column datatype='real' name='[Social harm]' role='measure' type='quantitative' />
      <column-instance column='[Drug]' derivation='None' name='[none:Drug:nk]' pivot='key' type='nominal' />
      <column-instance column='[Acute harm]' derivation='Sum' name='[sum:Acute harm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Chronic harm]' derivation='Sum' name='[sum:Chronic harm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health-care costs]' derivation='Sum' name='[sum:Health-care costs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Intoxication]' derivation='Sum' name='[sum:Intoxication:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Intravenous harm]' derivation='Sum' name='[sum:Intravenous harm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Dependence]' derivation='Sum' name='[sum:Mean Dependence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Physical harm + Mean Dependence]' derivation='Sum' name='[sum:Mean Physical harm + Mean Dependence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Physical harm(NA=0)]' derivation='Sum' name='[sum:Mean Physical harm(NA=0):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Physical harm]' derivation='Sum' name='[sum:Mean Physical harm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Social harm]' derivation='Sum' name='[sum:Mean Social harm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median Physical harm]' derivation='Sum' name='[sum:Median Physical harm:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Physical]' derivation='Sum' name='[sum:Physical:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pleasure]' derivation='Sum' name='[sum:Pleasure:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Psychological]' derivation='Sum' name='[sum:Psychological:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social harm]' derivation='Sum' name='[sum:Social harm:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.257184' measure-ordering='alphabetic' measure-percentage='0.702586' parameter-percentage='0.0402299' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Drug:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cannabis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4-MTA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anabolic steroids&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heroin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cocaine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barbiturates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Street methadone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Methylphenidate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benzodiazepines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ketamine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solvents&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tobacco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecstasy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buprenorphine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alkyl nitrites&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LSD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GHB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amphetamine&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm(NA=0):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Acute harm:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intravenous harm:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Physical:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Social harm:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Dependence:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Chronic harm:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Psychological:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Median Physical harm:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Health-care costs:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Social harm:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intoxication:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Meausre' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='physical_harm_and_dependence' name='federated.0fcll541mfj8961eaihpk1ycliug' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Meausre' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0fcll541mfj8961eaihpk1ycliug'>
            <column datatype='real' name='[Acute harm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Chronic harm]' role='measure' type='quantitative' />
            <column datatype='string' name='[Drug]' role='dimension' type='nominal' />
            <column datatype='real' name='[Health-care costs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Intoxication]' role='measure' type='quantitative' />
            <column datatype='real' name='[Intravenous harm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Dependence]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Physical harm + Mean Dependence]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Physical harm(NA=0)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Physical harm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Social harm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Physical harm]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Physical]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pleasure]' role='measure' type='quantitative' />
            <column datatype='real' name='[Psychological]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social harm]' role='measure' type='quantitative' />
            <column-instance column='[Drug]' derivation='None' name='[none:Drug:nk]' pivot='key' type='nominal' />
            <column-instance column='[Acute harm]' derivation='Sum' name='[sum:Acute harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Chronic harm]' derivation='Sum' name='[sum:Chronic harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health-care costs]' derivation='Sum' name='[sum:Health-care costs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Intoxication]' derivation='Sum' name='[sum:Intoxication:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Intravenous harm]' derivation='Sum' name='[sum:Intravenous harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Dependence]' derivation='Sum' name='[sum:Mean Dependence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Physical harm + Mean Dependence]' derivation='Sum' name='[sum:Mean Physical harm + Mean Dependence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Physical harm(NA=0)]' derivation='Sum' name='[sum:Mean Physical harm(NA=0):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Physical harm]' derivation='Sum' name='[sum:Mean Physical harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Social harm]' derivation='Sum' name='[sum:Mean Social harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Physical harm]' derivation='Sum' name='[sum:Median Physical harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Physical]' derivation='Sum' name='[sum:Physical:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pleasure]' derivation='Sum' name='[sum:Pleasure:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Psychological]' derivation='Sum' name='[sum:Psychological:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social harm]' derivation='Sum' name='[sum:Social harm:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fcll541mfj8961eaihpk1ycliug].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Acute harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Chronic harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Health-care costs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intoxication:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intravenous harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Dependence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm(NA=0):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Social harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Median Physical harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Physical:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Psychological:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Social harm:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Parameters].[Parameter 1]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Drug:nk]' member='&quot;Alkyl nitrites&quot;' />
              <groupfilter function='member' level='[none:Drug:nk]' member='&quot;Amphetamine&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Acute harm:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Chronic harm:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Health-care costs:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intoxication:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intravenous harm:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Dependence:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm(NA=0):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Social harm:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Median Physical harm:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Number of Records:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Physical:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Psychological:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Social harm:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Acute harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Chronic harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Health-care costs:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intoxication:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Intravenous harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Dependence:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm(NA=0):qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Social harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Median Physical harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Number of Records:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Physical:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Psychological:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Social harm:qk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]</column>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fcll541mfj8961eaihpk1ycliug].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fcll541mfj8961eaihpk1ycliug].[Multiple Values]</rows>
        <cols>([federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk] / [federated.0fcll541mfj8961eaihpk1ycliug].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='physical_harm_and_dependence' name='federated.0fcll541mfj8961eaihpk1ycliug' />
          </datasources>
          <datasource-dependencies datasource='federated.0fcll541mfj8961eaihpk1ycliug'>
            <column datatype='string' name='[Drug]' role='dimension' type='nominal' />
            <column datatype='real' name='[Mean Physical harm + Mean Dependence]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Physical harm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Social harm]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pleasure]' role='measure' type='quantitative' />
            <column-instance column='[Drug]' derivation='None' name='[none:Drug:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean Physical harm + Mean Dependence]' derivation='Sum' name='[sum:Mean Physical harm + Mean Dependence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Physical harm]' derivation='Sum' name='[sum:Mean Physical harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Social harm]' derivation='Sum' name='[sum:Mean Social harm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pleasure]' derivation='Sum' name='[sum:Pleasure:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]'>
            <groupfilter from='&quot;4-MTA&quot;' function='range' level='[none:Drug:nk]' to='&quot;Tobacco&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='size' field='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]' />
              <text column='[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]' />
              <size column='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9168550968170166' />
                <format attr='mark-transparency' value='160' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm:qk]</rows>
        <cols>[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Social harm:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='physical_harm_and_dependence' name='federated.0fcll541mfj8961eaihpk1ycliug' />
      </datasources>
      <datasource-dependencies datasource='federated.0fcll541mfj8961eaihpk1ycliug'>
        <column datatype='string' name='[Drug]' role='dimension' type='nominal' />
        <column-instance column='[Drug]' derivation='None' name='[none:Drug:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='6' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='1' param='vert' type='layout-flow' w='86528' x='586' y='1042'>
              <zone h='97916' id='3' param='vert' type='layout-flow' w='86528' x='586' y='1042'>
                <zone h='97916' id='4' name='Sheet 1' w='86528' x='586' y='1042'>
                  <layout-cache minheight='351' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone h='97916' id='5' param='vert' type='layout-flow' w='12299' x='87114' y='1042'>
              <zone fixed-size='392' h='52084' id='7' is-fixed='true' name='Sheet 1' param='[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]' type='filter' w='12299' x='87114' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Sheet 1' id='4' />
                  <story-point captured-sheet='Sheet 2' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fcll541mfj8961eaihpk1ycliug].[:Measure Names]</field>
            <field>[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0E0925E8-6072-4AC1-A1E8-6626716964D6}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Mean Physical harm + Mean Dependence:qk]' size='35' type='color' />
            <card pane-specification-id='0' param='[federated.0fcll541mfj8961eaihpk1ycliug].[sum:Pleasure:qk]' size='84' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fcll541mfj8961eaihpk1ycliug].[none:Drug:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E4023D0-7D92-4571-B087-224933874F9A}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9B77F432-DD4F-42E8-9BB6-BA8535187058}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{73CCAA1F-DAAD-437A-B76A-3E45BFBF6581}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      f24yUqYYnv/uAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAPw0lEQVR4nO3dfWwb530H8O/dkZL4JlEi9WLJkm1ZfpPfX5u0aRLHLZIiKdpiQFOgTRbM
      gLFsA/ZHsSzYhv1TDNg6bMCGrQWyrUOadti6pEubtEtWO4kTZ47tKLZjWZZs68WWRFEyJUqi
      SIovd7c/nB0t6SxT5olH6fl+AAN+iNPdjw/4JY/H+91Juq7rIBKUbHcBRHZiAEhoDAAJjQEg
      oTnuHHR+dBxvf9QNd7mMQPMWfPOpI/j+9/8GL7zw3fvewK2h63j9V7/GzYiM7/3pHxRcMJGV
      5gTg3fdO49k/fBG1LicA4OKZk7h8+RJeeuklfOmpbyIxfAHvnbsCR5kbv/3cs7jy4ZtQ/a34
      +MNzWL+2Apsf+Co21nnwb6+8gqefeQYKAFdlHY4eexZ/8b0f2/H8iBY1ZxfoW99+Gv/6d3+N
      v//BPyM8Po3dn3sE27fvxLFjx9Da4MR/vf0xfv/3nsdXDjTjZ786hWhkBKc+uYZjzz+HB/a0
      44033kJ2JoyRaQ3KZ+v0VlZClmx4ZkR5mBOA2ubNeOHFP8FzTz+Jf/yHH8xdcnYKiicACcCa
      piZEIuMAgIcPPwpFAqpbdiETvoIP3j2BL375iWLVT1SQOQH4zRv/iePvncL5C+dRU9cIACjX
      4jh1+gxupSrhyw7h3Q/+F//08qs48ugDC1b2+EM78KO3u7F/c73xWOhmHzo6LiISCaOj4yKy
      y/yEiJZCuvOXYE3NoOfKFehlXmzb1ApJAtLJGVzuvoZN23bAUyahq7MTgaYNaAhUIXorBIev
      Dr6K218lYiNd+OmJfvzud540NhC62YeRW9HPRg7s3r977hcPIhtJVp0KEQ314Sc//x9853eO
      otrttGKVRMvOsgAQrUT8IYyExgCQ0BgAEhoPyBTB9PQ0YrGY3WUsEAwGkUql7C5jgcrKyqJt
      iwEogmw2i2QyaXcZC2iahmxW7F9muAtEQmMASGgMAAmNASChMQAkNAaAhMYAkNAYABIaA0BC
      YwBIaAwACY0BIKExACQ0BoCExgCQ0NgPUAQOhwMul8vuMhaQZRkOh9gvAV4VgoTGXSASGgNA
      QmMASGgMAAmNASChMQAkNLEPApeol3/0Eqr9QRx6+GFk0hoqa/zIxmNQ9AxC0STaN22wu8RV
      gwEoQcH6tdi11o33TpxAYMNe+NMaxro6oKkaZEliACzEXaASpGeSuDou4UB7C3a2b0ZybASO
      Ci+qvRUYHZ+yu7xVxfJfgrPZrPA/r1vt/+e0t7sTU2kF+3Zts7ukFe3O16jlAYjFYvD5fFau
      UnicU2vdOZ+r6q06E7uFU5eGcPhAC66G0igHUON3oswbgJaZxeDQIDZv2ojw0Ahc/gAyyRj6
      +3qxYdMWQFWR0oB0ZASZyiAavGXISOWQswmoigvB6uJdsbhUhAauYzwlYdO6RoyN3kKZU0ZV
      sA7jIyOoqluDkf6r8AXXoNrjxMRMBhPhAVTXt8ChzaLcFwDSM0hmNGRVHa5yJ9xeLybGRtGw
      tgXhoRuob1oHp2LvPXRXVQCu9Q1CTk0hnm0BAPR0XsSDj30RgwO9kJWKz5ZKIhoDEqkRqFkV
      lTVBBL06Oq7G4StPw+dwoba5EZ0fvg+5ogpVLhlufy0gYgBGxzCTBnxOHX6XjlG9Fsnhq8hm
      AogP9kOXHEjGphC+MYZkVkZN0I+mhiC6L1/CVCiCap8bqVQKLp8PicQMZqYnUdvgx6XTHUh7
      nIhnh7CltdnW57iqAlAZqMO2HdswPByGq6ISO3a1IxqNYzYWxcadBxAJDwFQUFNdCSCJTCaD
      bDqB8elZNK2pRyYZga/cgdCNEGpqalDmrUGZnsLMbOldQ3/Z6SoamtajqhwIJSV4PBKq4IGk
      VKC3ZxhNrWtR4bj97i2jBh6UoapCxlB4DNmsDrfHjaoqP9KZDJxlTmQyGTidTnjcHtQ21CKS
      iKM2WGPzk1yG7wCjo6Nwu91WrrJAKgZvjqK5pdHuQu5bIpEooTlNY3IyC7+/VOpZukQigfr6
      2/eytvwTwO12l9wXtvbtfrtLKFgpzWkJlVIw/g5AQmMASGgMAAlt6QHQNdzs78V0fBYAMBkZ
      RU/vgMVlERXHfQRARaC+ETf6ewEAAzcGSuoLGtFSLP0okOzEVGQIjvLbl/nYve8QejsvI1Fb
      g3JNg6qqwt9602qlNKd6ehxaOmKMZVcLJKX0LvmyGFVVjf8vOQBaOonpRBreqmrEYjFMRyPI
      VrjhliRAUaAoCk+Gs1gpzWnq1hmkwr80xu62P4LDt8XGipZOURTj/0ueVbnMha1bc0+Yuz+0
      kvEoEAmNASChMQAkNAaAhMYAkNAYABIaA0BCYwBIaAwACY0BIKExACQ0BoCExgCQ0BgAEhoD
      QEIruCd4Nj6N8K2o1XURFUXhPcGDIcTHR5G2ujKiIii4J9jpcKICgKrrUNkTvCxKaU41TZs3
      Lp3a8mVpT3CVtwLRpIom9gQvm1KaU1Weu9Mgy6VTW74s7wkOWlMXUdHxKBAJjQEgoTEAJDQG
      gITGAJDQGAASGgNAQmMASGgMAAmNASChMQAkNAaAhMYAkNAYABIaA0BCYwBIaEsPgJZGT3c3
      Pu3qAQB0XbrAG2XTinUfPcFlcJUpqK6qBQAEAwHcuBFGqnUdHOwJXhalNKfsCZ6dxHAkhha3
      H7FYDJlMBmVuNxySBIU9wcuilOaUPcEVfjx4aJ8x9vl8aFpnTWFExcYvwSS0lfXZRZY4ef0d
      vN/7jjF+5uBRrK/ZYGNF9mEABBSJj+HKaKcxTqTjNlZjL+4CkdAYABIaA0BCYwBIaAwACY0B
      IKExACQ0BoCExgCQ0BgAEhoDQEJjAEhoDAAJreCe4Ktdl3Du4wtQ7/FnRKWo4J5gR7kHLeVA
      UtfhYk/wsrB6Tgvp6y2lnuDw0CDCQzeNcVv7TngrK+/5d5b2BDtkDaMJFTslCRJ7gpeF1XMq
      F9DXW0o9wanZJKLjEWOsaWpeteTdE5yeHsErb57GF/ZuxdZt7QDMe4Jbllw6UWlY9DuA7CiD
      Q02ib2isWPUQFdWinwCaCgSqq5DOcJ+eVobouW5Mnus2xg1fewiupuBdl89r5y2Vmi28MqIi
      yEzEEO8NGWMtmVp0+UUDcK1vAGvWrIGjwmtNdUQlZtEAVHnL8MFvPkKgsRm7t28pVk1UIhKx
      YSRjuXfTyoD5a2A0No3RWMwYtwaC8JaXL3t9Vlg0AAFvGeqaW6Gq6WLVQ3m6EJrBxVDuciaP
      b6lGg6/M0m0MX/0lrnf80Bgfeupf4JUWLne8pxs/7ThnjP/yq1/HrsamvLYx9eprmHr1NWNc
      9+d/hor29vsveokWDcDZS33Ys3MP1q+tL1Y9llITNzE7/B/G2FnzeZQFvmBjRVRqFj0M+vCR
      xzHUdQZ/+8OXi1WPpXQ1CXWmx/inp8ftLolKzKKfACeP/xrB1t347uNiXjaPVr9FA/Dol58q
      Vh1EtuBJOwQA6Jw4j8vR88b4cONXbKymeBgAAgBMZyYxFB8wxilVjB8/2RBDQrP8E6AvFMXP
      3s8dE35s3wYc2c8v0bGpSfRcumiMG1vWobFlvaXbyFx+HZmuXxjj8kf+GErdVku3sdpYHoD4
      bAad/bmzR3e01lm9iRUpk8nMOXe9Olhr+Ta06RDUodybj56KLbI0AdwFIsHdRwBUnD1+EjOf
      jXifYFrJ7mMXSEFzc6Mxmn+fYH1Bz6hmW8+opqnzxjbWot5/LWY9wfN7c1VVzbtf12w5TZq3
      Pk0zWU5bsJymmWxXVXFxeBCd4dyJdIfbNqPO47t3LWr+82K23QXzomnIhsaBsancY7VuwHe7
      lqUHQE0hNB5B5bAPDZWeBfcJlhb0jMq29YxmZWXO2M5aZOX+azHrCZ7f16soSt69vmbLydK8
      9cmyyXLyguVk2WS7ioKp2QRuTk4Yj2U0Lb9alPznxWy7C+ZFliGls9AmcycOSgGX8f+lvxqU
      cuz//IPGkPcJppWMX4JJaLb9EqyOdSN18q+MsbP9a3Bu/7pd5axeI+eBcO4UB7SJcYpDvmwL
      gJ6KzTlmraw9aFcpq9vsJDA5kBtnxTjFIV/cBSKhMQAkNJ4NugKc6OjHuWu50yiOPrkXgNO+
      glYRBmAFGJuMzzm/Kj6bASoYACtwF4iExgCQ0BgAEhoDQEJjAEhoDAAJjYdBaUXoOHsGn5w9
      a4yf/MY3LFkvA0ArwuTEBPp7rxvj2WTSkvVyF4iEVnBPMO8TTCtZwT3B8+8TnG9PcDH6dQvZ
      xnQ4iq63PjHGa/e0Yu2ehdc3kqITUM7l9k21jW3QNrYtrKWAnmBd1+f9rUnv6116gjVNm/Mu
      Z97ra31PsFmv78DH1zB0oc94rP2JfZBMltN6uiHfsbujHjxkur4Fr7W79ATPf0zXcvNZcE/w
      /PsE59sTXIx+3Xy3MZlM4NLIsDFuqa6BJ61ivH/UeCy4ocG8vmwWCI/ktrFmDWSz3tcCeoIl
      ae5dKWRZgZ5nT7BZj2wxeoLNen2TU4k5c6qlVThNlpMT8TlzqmSzpuvT9fx6gmVZxp0RkOTc
      fFrSE7zS7xM8NZvEqf7cO85DaMM2LLyCAa0+q+Yo0HjoHM6+edQYt+1/Hhs2P7ZguU9Dw3jx
      jdeN8bf3H8RDGzcWpUYqPUUJwEQig7ODucv0tQVcWF+MDVssPTCA6I9fMcaeRx6Gd/MmGyui
      QhUlAGlVx2gsY4wLvZnbVDqKy9ELxrjZsx7ugtaYHy2RQKrrijGuaG8HGIAVbUXuAk2nJ3F6
      9N3cA/WHsQW8lzEtHX8II6GV1idAbAS4/t+5ccNeYM1e++qhVa+0ApCdnXsNGz9vrEHLi7tA
      JDQGgIRWWrtAgkkORxD+xSlj7D+4Ff5t66Bev+PUioZqO0oTBgNgIy2ZQrw3dxMJz8Ym6FkV
      +h3Xstf9HjtKEwZ3gUhoDAAJjQEgoTEAJDQGgIS29ABoGXR++iluDN0+VNd3rZv3CaYVa8mH
      QTOTIVQ1tyMdvQngditeLDaDrK5DuktPsGrSD2vWr6tqGpT5y5n0zapmvaqmj+W3XU01qRkm
      6zNbLs+azXqCTZ+HyTZWS0+wWb+ucpfl7lmzXT3BDl8A4Yud8FVVIhaLwaEoSCWT0CQJZXfp
      CVZM+mFlfeFjilkPqknfrOly8/tDZRmySU+wLJk8ppjUDJP1mS2XZ81mPcGmf6vIc66wIcvy
      qukJzquWJSxnS0+w5PTi4IE9xvj2fYJbl7oaopLAL8EkNAaAhMYAkNAYABIaA0BCK/nToW/N
      jOH93neM8bb6HfB5S/sU4ejE+Jxr2W9oa4Pf77exIrqbFRGA1y7+uzH+rd3fwiHv52ys6N6i
      ExM48fZbxvgInsDeAwdsrIjuhrtAJDQGgITGAJDQGAASGgNAQmMASGj/BwmTsQb7rmcOAAAA
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
